DROP TABLE IF EXISTS ORDERS;

CREATE EXTERNAL TABLE ORDERS (O_ORDERKEY BIGINT, O_CUSTKEY BIGINT NOT NULL, O_ORDERSTATUS CHAR(1), O_TOTALPRICE DECIMAL, O_ORDERDATE DATE, O_ORDERPRIORITY CHAR(15), O_CLERK CHAR(15), O_SHIPPRIORITY INTEGER, O_COMMENT VARCHAR(79)) USING csv OPTIONS(path 's3a://tpch/skewed/100GB/order.tbl', delimiter '|');

DROP TABLE IF EXISTS SUPPLIER;

CREATE EXTERNAL TABLE SUPPLIER (S_SUPPKEY BIGINT, S_NAME CHAR(25), S_ADDRESS VARCHAR(40), S_NATIONKEY BIGINT NOT NULL, S_PHONE CHAR(15), S_ACCTBAL DECIMAL, S_COMMENT VARCHAR(101)) USING csv OPTIONS(path 's3a://tpch/skewed/100GB/supplier.tbl', delimiter '|');

DROP TABLE IF EXISTS LINEITEM;

CREATE EXTERNAL TABLE LINEITEM (L_ORDERKEY INTEGER, L_PARTKEY INTEGER, L_SUPPKEY INTEGER, L_LINENUMBER INTEGER, L_QUANTITY DECIMAL, L_EXTENDEDPRICE DECIMAL, L_DISCOUNT DECIMAL, L_TAX DECIMAL, L_RETURNFLAG CHAR(1), L_LINESTATUS CHAR(1), L_SHIPDATE DATE, L_COMMITDATE DATE, L_RECEIPTDATE DATE, L_SHIPINSTRUCT  CHAR(25), L_SHIPMODE CHAR(10), L_COMMENT VARCHAR(44)) USING csv OPTIONS(path 's3a://tpch/skewed/100GB/lineitem.tbl', delimiter '|');

DROP TABLE IF EXISTS LINEITEM_lreceiptdate_sample;
CREATE SAMPLE TABLE LINEITEM_lreceiptdate_sample ON LINEITEM OPTIONS (qcs 'month(l_receiptdate)', fraction '0.01') AS (SELECT * FROM LINEITEM);

DROP TABLE IF EXISTS LINEITEM_lreceiptdate_sample;
CREATE SAMPLE TABLE LINEITEM_lreceiptdate_sample ON LINEITEM OPTIONS (buckets '10', qcs 'l_extendedprice', fraction '0.01') AS (SELECT * FROM LINEITEM);

DROP TABLE IF EXISTS LINEITEM_lorderkey_sample;
CREATE SAMPLE TABLE LINEITEM_lorderkey_sample ON LINEITEM OPTIONS (buckets '10', qcs 'l_orderkey', fraction '0.01') AS (SELECT * FROM LINEITEM);

DROP TABLE IF EXISTS LINEITEM_lreceiptlext_sample;
CREATE SAMPLE TABLE LINEITEM_lreceiptlext_sample ON LINEITEM OPTIONS (buckets '10', qcs 'l_receiptdate, l_extendedprice', fraction '0.01') AS (SELECT * FROM LINEITEM);

-- 1
SELECT COUNT(*) AS NUM_ITEMS, SUM(L_QUANTITY) AS TOT_COST, AVG(L_QUANTITY) AS AVG_QTY FROM LINEITEM WITH ERROR 0.1 BEHAVIOR 'do_nothing';

SELECT COUNT(*) AS NUM_ITEMS, SUM(L_QUANTITY) AS TOT_COST, AVG(L_QUANTITY) AS AVG_QTY FROM LINEITEM;

-- 2
SELECT COUNT(*) AS NUM_ITEMS, SUM(L_QUANTITY) AS TOT_COST, AVG(L_QUANTITY) AS AVG_QTY FROM LINEITEM  WHERE month(L_RECEIPTDATE) = 8 WITH ERROR 0.1 BEHAVIOR 'do_nothing';

SELECT COUNT(*) AS NUM_ITEMS, SUM(L_QUANTITY) AS TOT_COST, AVG(L_QUANTITY) AS AVG_QTY FROM LINEITEM  WHERE month(L_RECEIPTDATE) = 8;

-- 3
SELECT month(L_RECEIPTDATE) AS MONTH, COUNT(*) AS NUM_ITEMS, SUM(L_QUANTITY) AS TOT_QTY, AVG(L_QUANTITY) AS AVG_QTY FROM LINEITEM  GROUP BY month(L_RECEIPTDATE) ORDER BY month(L_RECEIPTDATE) WITH ERROR 0.1 BEHAVIOR 'do_nothing';

SELECT month(L_RECEIPTDATE) AS MONTH, COUNT(*) AS NUM_ITEMS, SUM(L_QUANTITY) AS TOT_QTY, AVG(L_QUANTITY) AS AVG_QTY FROM LINEITEM  GROUP BY month(L_RECEIPTDATE) ORDER BY month(L_RECEIPTDATE);

-- 4
SELECT S_NATIONKEY AS NATION, COUNT(*) AS NUM_ITEMS, SUM(L_QUANTITY) AS TOT_QTY, AVG(L_QUANTITY) AS AVG_QTY FROM LINEITEM , SUPPLIER WHERE L_SUPPKEY = S_SUPPKEY GROUP BY S_NATIONKEY ORDER BY S_NATIONKEY WITH ERROR 0.1 BEHAVIOR 'do_nothing';

SELECT S_NATIONKEY AS NATION, COUNT(*) AS NUM_ITEMS, SUM(L_QUANTITY) AS TOT_QTY, AVG(L_QUANTITY) AS AVG_QTY FROM LINEITEM , SUPPLIER WHERE L_SUPPKEY = S_SUPPKEY GROUP BY S_NATIONKEY ORDER BY S_NATIONKEY;

-- 5
SELECT COUNT(*) AS NUM_ITEMS, SUM(L_QUANTITY) AS TOT_QTY, AVG(L_QUANTITY) AS AVG_QTY FROM LINEITEM , ORDERS WHERE L_ORDERKEY = O_ORDERKEY AND O_ORDERPRIORITY = '1-URGENT' WITH ERROR 0.1 BEHAVIOR 'do_nothing';

SELECT COUNT(*) AS NUM_ITEMS, SUM(L_QUANTITY) AS TOT_QTY, AVG(L_QUANTITY) AS AVG_QTY FROM LINEITEM , ORDERS WHERE L_ORDERKEY = O_ORDERKEY AND O_ORDERPRIORITY = '1-URGENT';
